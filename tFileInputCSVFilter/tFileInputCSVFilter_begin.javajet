<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List 
    	java.util.Map		
        java.io.ByteArrayInputStream
        java.io.BufferedReader
        java.io.ByteArrayOutputStream
        java.io.FileReader
        java.io.InputStream
        java.io.InputStreamReader
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();	
    
    String delimiter = ElementParameterParser.getValue(node, "__DELIMITER__");
	String inputFile = ElementParameterParser.getValue(node, "__INPUT_FILE__");
	String lookupValue = ElementParameterParser.getValue(node, "__LOOKUP_VALUE__");
	String lookupColumn = ElementParameterParser.getValue(node, "__LOOKUP_COLUMN__");
	Object headerRowNumber = ElementParameterParser.getObjectValue(node, "__HEADER_ROW_NUMBER__");
%>
String lookupValue<%=cid %> = <%=lookupValue %>;
String lookupColumn<%=cid %> = <%=lookupColumn %>;
int headerRowNumber<%=cid %> = <%=headerRowNumber %>;

com.csvreader.CsvReader csvReader<%=cid %> = null;
java.io.ByteArrayOutputStream out<%=cid %> = new java.io.ByteArrayOutputStream();
java.io.BufferedReader reader<%=cid %> = new java.io.BufferedReader(new java.io.FileReader(<%=inputFile %>));
  
if(headerRowNumber<%=cid %> > 0) { 
  int rowNumber<%=cid %> = 0;
  String line<%=cid %> = null;
  while ((line<%=cid %> = reader<%=cid %>.readLine()) != null) {
    if(rowNumber<%=cid %> >= headerRowNumber<%=cid %>) {
      out<%=cid %>.write((line<%=cid %> + "\n").getBytes());
    }
    rowNumber<%=cid %>++;
  }
  java.io.InputStream is<%=cid %> = new java.io.ByteArrayInputStream(out<%=cid %>.toByteArray());
  csvReader<%=cid %> = new com.csvreader.CsvReader(new java.io.InputStreamReader(is<%=cid %>));
} else {
  csvReader<%=cid %> = new com.csvreader.CsvReader(<%=inputFile %>);
}

csvReader<%=cid %>.setDelimiter(<%=delimiter %>.charAt(0));
csvReader<%=cid %>.readHeaders();

char textQualifier<%=cid %> = csvReader<%=cid %>.getTextQualifier();
String[] headers<%=cid %> = csvReader<%=cid %>.getHeaders();
StringBuffer sb<%=cid %> = new StringBuffer();
for(int i<%=cid %> = 0; i<%=cid %> < headers<%=cid %>.length; i<%=cid %>++ ) {
  String header<%=cid %> = headers<%=cid %>[i<%=cid %>];
  sb<%=cid %>.append(textQualifier<%=cid %> + header<%=cid %> + textQualifier<%=cid %>);
  if( i<%=cid %> != headers<%=cid %>.length - 1 ) {
    sb<%=cid %>.append(<%=delimiter %>);
  }
}
  
int nb_line_<%=cid %> = 0;
int nb_line_ok_<%=cid %> = 0;
int nb_line_reject_<%=cid %> = 0;

boolean isRecordAvailable<%=cid %> = true;
while (isRecordAvailable<%=cid %>) { //Begin of Main Loop


