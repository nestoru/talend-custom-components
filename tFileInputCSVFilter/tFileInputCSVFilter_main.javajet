<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.EConnectionType
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List 
    	java.util.Map		
	" 
%>
    
<%CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

List<? extends IConnection> conns = node.getOutgoingSortedConnections();
List<? extends IConnection> connsFilter = node.getOutgoingConnections("FILTER");
List<? extends IConnection> connsReject = node.getOutgoingConnections("REJECT");

for ( IConnection conn : conns  ) { %>
  <%= conn.getName() %> = null;
<% }

List<IMetadataColumn> columns = null;
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas != null) && (metadatas.size() > 0)) {
  IMetadataTable metadata = metadatas.get(0);
  if (metadata != null) {
    columns = metadata.getListColumns();	
  }
}

%>
String value<%=cid %> = null;

if( nb_line_<%=cid%> == 0 ) {
  <%for (IConnection connFilter : connsFilter) {%>
    if(<%=connFilter.getName() %> == null){ 
	  <%=connFilter.getName() %> = new <%=connFilter.getName() %>Struct();
	}<%
	if (connFilter.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {	    
	  for(IMetadataColumn column : columns) {%>
	    <%=connFilter.getName() %>.<%=column.getLabel()%> = sb<%=cid %>.toString();
	  <%}
	}
  }%>
  <%for (IConnection connReject : connsReject) {%>
    if(<%=connReject.getName() %> == null){ 
	  <%=connReject.getName() %> = new <%=connReject.getName() %>Struct();
	}<%
    if (connReject.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
      for(IMetadataColumn columnReject : columns) {%>
        <%=connReject.getName() %>.<%=columnReject.getLabel()%> = sb<%=cid %>.toString();
      <%}
    }
  }%> 
} else {
	isRecordAvailable<%=cid %> = csvReader<%=cid %>.readRecord();
	if( ! isRecordAvailable<%=cid %> ) {
	  break;
	}
	value<%=cid %> = csvReader<%=cid %>.get(lookupColumn<%=cid %>);
	
	
	if(value<%=cid %>.trim().equals(lookupValue<%=cid %>.trim())) {
	  <%for (IConnection connFilter : connsFilter) {%>
	    if(<%=connFilter.getName() %> == null){ 
		  <%=connFilter.getName() %> = new <%=connFilter.getName() %>Struct();
		}<%
		if (connFilter.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {	    
		  for(IMetadataColumn column : columns) {%>
		    if( nb_line_ok_<%=cid %> == 0 && nb_line_<%=cid%> == 0 ) {
	          <%=connFilter.getName() %>.<%=column.getLabel()%> = sb<%=cid %>.toString() + "\n" + csvReader<%=cid %>.getRawRecord();
	        } else {
		      <%=connFilter.getName() %>.<%=column.getLabel()%> = csvReader<%=cid %>.getRawRecord();
	        }
		  <%}
		}
	  }%>
	  nb_line_ok_<%=cid%>++;
	} else {
	  <%for (IConnection connReject : connsReject) {%>
	    if(<%=connReject.getName() %> == null){ 
		  <%=connReject.getName() %> = new <%=connReject.getName() %>Struct();
		}<%
	    if (connReject.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
	      for(IMetadataColumn columnReject : columns) {%>
	        if(nb_line_reject_<%=cid%> == 0 && nb_line_<%=cid%> == 0 ) {
	          <%=connReject.getName() %>.<%=columnReject.getLabel()%> = sb<%=cid %>.toString() + "\n" + csvReader<%=cid %>.getRawRecord();
	        } else {
	          <%=connReject.getName() %>.<%=columnReject.getLabel()%> = csvReader<%=cid %>.getRawRecord();
	        }
	      <%}
	    }
	  }%> 
	  nb_line_reject_<%=cid%>++;
	}
}

nb_line_<%=cid%>++;
